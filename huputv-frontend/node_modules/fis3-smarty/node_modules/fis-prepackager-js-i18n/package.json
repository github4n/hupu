{
  "name": "fis-prepackager-js-i18n",
  "version": "0.0.2",
  "description": "JavaScript i18n support!",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "''"
  },
  "keywords": [
    "fis",
    "i18n",
    "i10n"
  ],
  "author": {
    "name": "xiangshouding"
  },
  "license": "MIT",
  "readme": "## fis-prepackager-js-i18n\n\n### 介绍\n\n提供JS国际化语言翻译支持\n\n### 使用\n\n> fis.config.set('modules.prepackager', 'js-i18n');\n\n如果你用的是`fis-plus`:\n\n> fis.config.set('modules.prepackager', fis.config.get('modules.prepackager') + ', js-i18n');\n\n### 实现\n\n识别JavaScript中国际化编译函数`__()`，将其替换数据中心`F.context`方式；\n\n如:\n\n    var a = __('百度');\n\n产出结果:\n\n    var a = F.context('a3f4a5b'); //a3f4a5b 为 \"百度\" 的md5前7位\n\n并且把这些翻译项，产出一个widget `translate.tpl`，在模板渲染的时候渲染到页面；\n\n    <script type=\"text/javascript\">\n        F.context({\n            'a3f4a5b': '{%__(\"百度\")%}'\n        });\n    </script>\n\n这样，当页面渲染时，在head关闭标签之前，渲染`translate.tpl`，这样所有的数据就被定义好了；\n到执行JavaScript的时候获取这些数据。\n\n为什么这么做呢？\n\n> 语言翻译统一在PHP（后端）层面处理。\n",
  "readmeFilename": "README.md",
  "_id": "fis-prepackager-js-i18n@0.0.2",
  "dist": {
    "shasum": "9cbae8d34915f88bd3b4a65e0f4e1bb1dd9162c9",
    "tarball": "https://registry.npmjs.org/fis-prepackager-js-i18n/-/fis-prepackager-js-i18n-0.0.2.tgz"
  },
  "_from": "fis-prepackager-js-i18n@0.0.2",
  "_npmVersion": "1.3.21",
  "_npmUser": {
    "name": "fansekey",
    "email": "fansekey@gmail.com"
  },
  "maintainers": [
    {
      "name": "fansekey",
      "email": "fansekey@gmail.com"
    }
  ],
  "_shasum": "9cbae8d34915f88bd3b4a65e0f4e1bb1dd9162c9",
  "_resolved": "https://registry.npmjs.org/fis-prepackager-js-i18n/-/fis-prepackager-js-i18n-0.0.2.tgz"
}
